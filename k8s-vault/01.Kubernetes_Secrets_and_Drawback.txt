kubectl create secret generic mysql-crds --from-literal=password=s3cR3t!

kubectl get secret mysql-crds -o yaml

echo czNjUjN0IQ==| base64 -d

ETCDCTL_API=3 etcdctl get /registry/secrets/default/mysql-crds \
--cacert /etc/kubernetes/pki/etcd/ca.crt \
--cert /etc/kubernetes/pki/etcd/server.crt \
--key /etc/kubernetes/pki/etcd/server.key 

head -c 32 /dev/urandom | base64

# saving this YAML in /etc/kubernetes/pki/encrypt-secrets.yml
apiVersion: apiserver.config.k8s.io/v1
kind: EncryptionConfiguration
resources:
  - resources:
    - secrets
    providers:
    - aescbc:
        keys:
        - name: key1
          secret: RSyYZbCmZbshlScWcjqm+zAbB83coDlJ47HTRLOOVW4=
    - identity: {}


# editing YAML in /etc/kubernetes/manifests/kube-apiserver.yaml
spec:
  containers:
  - command:
    - kube-apiserver
    - --insecure-port=0
    - --encryption-provider-config=/etc/kubernetes/pki/encrypt-secrets.yml
    - --authorization-mode=Node,RBAC


kubectl get secrets --all-namespaces -o json | kubectl replace -f -

ETCDCTL_API=3 etcdctl get /registry/secrets/default/mysql-crds \
--cacert /etc/kubernetes/pki/etcd/ca.crt \
--cert /etc/kubernetes/pki/etcd/server.crt \
--key /etc/kubernetes/pki/etcd/server.key 
